plugins {
    id 'java-library'
    id 'org.springframework.boot' apply false
    id 'io.spring.dependency-management' apply false
    id 'com.diffplug.spotless' version "7.0.2" apply false
}

allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"

    java {
        sourceCompatibility = project.javaVersion
        targetCompatibility = project.javaVersion
    }

    repositories {
        mavenCentral()
    }
}

subprojects {

    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.diffplug.spotless'

    bootJar.enabled = false // 실행가능한 jar
    jar.enabled = true // plain jar

    dependencies {
        // lombok
        compileOnly 'org.projectlombok:lombok'          // 컴파일 시점에만 사용
        annotationProcessor 'org.projectlombok:lombok'  // 코드 생성을 위해 사용

        // teset
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    // compileOnly가 annotationProcessor를 상속하도록 설정
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    spotless {
        java {
            // Google Java Format을 기본 포매터로 사용
            googleJavaFormat()
                    .reflowLongStrings()      // 긴 문자열을 여러 줄로 나누어 포맷팅
                    .formatJavadoc(false)     // Javadoc 포맷팅 비활성화
                    .reorderImports(false)    // import문 재정렬 비활성화
                    .groupArtifact('com.google.googlejavaformat:google-java-format')  // 사용할 구글 포맷터 버전 지정

            indentWithTabs(2)       // 탭을 사용한 들여쓰기 설정 (탭 크기 2)
            indentWithSpaces(4)     // 공백을 사용한 들여쓰기 설정 (공백 4칸)
            importOrder()           // import문 순서 설정 (기본값 사용)
            removeUnusedImports()   // 사용하지 않는 import문 제거
            cleanthat()             // 코드 리팩토링 도구 적용
            formatAnnotations()     // 어노테이션 포맷팅 적용
        }
    }
}

